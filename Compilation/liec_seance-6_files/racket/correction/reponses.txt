CAI Chaolei
Exercice 1:
1.
<instr> :: <var> "=" <expr> ";"
        | <instr> <instr>

<expr>::  "(" <expr> ")"
        |<expr> "+" <expr>
        |<expr> "-" <expr>
        |<expr> "*" <expr>
        |<expr> "/" <expr>
        |<expr> "+" <expr>
        |"if" <expr> "then" <expr> "else" <expr>
        |<var>
        |<num>
        |<bool>
<var>:: [a-zA-z]+
<num>:: -?[0-9]+
<bool> :: true
        | false

2.C'est toujours le probleme du shift/reduce
-(right Lelse)
e.g:
    if X then if Y then Z else V else W
Il y a ici plusieur else, dire que c'est le else le plus a droite qui prime supprime le conflit

-(left Leq Lneq Llt Lgt Llte Lgte)
Ces expression servent a l'expression conditionnel, ils ont tous la meme ordre de priorite,
il suffit alors de lire de gauche a droite
e.g:
    a => b == c < d

-(left Ladd Lsub)
idem l'addition et la soustraction se fait de gauche a droite
e.g:
    a + b - c + d

-(left Lmul Ldiv)
idem pour la multiplication et la division
e.g
    a * b / c * d

3.
(fail! msg) >> fct wrapper pour indiquer une erreur et forcer la fermeture du programme
(err msg pos) >> indique la position de l'erreur a l'user et ferme le programme
(type->string t) >> converti un type vers le string associe
(expr-pos expr) >> match une expression et retourne sa position
(errt expected given pos) >> indique l'erreur de type via la fonction err
(analyze parsed) >> wrapper pour appeler analyse-prog, car on va ajouter un parametre env a analyze-prog par la suite
(analyze-prog prog) >> programme principal pour l'analyse semantique, pour chaque block, applique les fcts analyze-instr
et passe au block suivant via l'appel recursif
(analyze-instr instr) >> analyze si le block est une instruction valide (c'est a dire une srtuct Passign valide)
    puis appel l'anaylyse-expr sur la partie expression du block
(analyze-expr expr) >> match les expressions et construit l'ast





Exercice 2:
1.a)liste,hash-map,set,class
b)hash-map
c)dictionnaire
2.
a) dans l'anaylyse-expr car verifier l'existence d'une variable est important quand il intervient dans une expression



Correction:
Exercice2
1) n'importe struct qui contient un valeur
2) environnement
a)qd on y fait reference,
